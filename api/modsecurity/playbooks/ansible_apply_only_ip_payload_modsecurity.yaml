- name: Only IP Payload Apply Mod Security Playbook
  hosts: firewall
  become: yes
  gather_facts: no
  tasks:
    - name: modsec create ip payload playbook for ip
      shell: echo "SecRule REMOTE_ADDR @quote@@ipMatch {{ secrule_ip }}@quote@ @quote@id:{{ secrule_id_ip }},setvar:'tx.inbound_anomaly_score_threshold={{ secrule_anomaly_score }}',setvar:'tx.blocking_paranoia_level={{ secrule_paranoia_level }}',setvar:'tx.detection_paranoia_level=%{TX.blocking_paranoia_level}',phase:1@quote@" > {{ secrule_file }}.conf

    - name: modsec create ip payload playbook for chain
      shell: echo "SecRule FULL_REQUEST @quote@{{ secrule_payload }}@quote@ @quote@id:{{ secrule_id_chain }},phase:2,deny,log,chain@quote@" >> {{ secrule_file }}.conf

    - name: modsec chain ip payload playbook for chain
      shell: echo "    SecRule REMOTE_ADDR @quote@@ipMatch {{ secrule_ip }}@quote@ @quote@t:none,log@quote@" >> {{ secrule_file }}.conf

    - name: validate
      shell: sed -i 's/"/\\"/g; s/@quote@/"/g' {{ secrule_file }}.conf

    # - name: modsec apply change playbook
    #   shell: docker container exec -it "{{ modsec_container_name }}" /bin/bash -c "nginx -s reload"

    - block:
        - name: modsec apply change playbook
          shell: docker container exec -it "{{ modsec_container_name }}" /bin/bash -c "nginx -s reload"
          register: task_result
          ignore_errors: yes
        
        - name: check if task failed
          fail:
            msg: "Task failed with error: {{ task_result.stdout }}"
          when: task_result.failed

      rescue:
        - name: delete secrule file if error
          shell: rm -rf {{ secrule_file }}.conf
        
        - name: apply change again
          shell: docker container exec -it "{{ modsec_container_name }}" /bin/bash -c "nginx -s reload"
        
        - name:
          fail:
            msg: "{{ ansible_failed_result.msg }}"

